- Class: meta
  Course: CS112
  Lesson: Session 5 Linear Regression II
  Author: Michael Chen
  Type: Standard
  Organization: Minerva University
  Version: 2.4.5
  
- Class: text
  Output: Welcome to the Swirl lesson for CS112 Session 5, Linear Regression II. 
      Please note that you can use the function rpt() to go back to the
      previous question. To end your Swirl session, you can type bye().
      After you exit a lesson, you can always resume a lesson by typing 
      swirl() again. However, make sure you use the same name you always use!

- Class: text
  Output: In this lesson, you will 1) run a simple regression with an interaction term, 
      2) run a simulation based on the regression, and 3) compare the simulated and analytical estimates. 

- Class: cmd_question
  Output: Let's load the Matching library first. If you haven't installed the 
      package yet, install it first and then load the package. 
  CorrectAnswer: library(Matching)
  AnswerTests: any_of_exprs('library(Matching)', 'library("Matching")')
  Hint: Fill in the argument for library().
  
- Class: cmd_question
  Output: Now, let's import our lovely lalonde dataset from the Matching library. 
  CorrectAnswer: data(lalonde)  
  AnswerTests: any_of_exprs('data(lalonde)', 'data("lalonde")')
  Hint: Fill in the argument for data().

- Class: cmd_question
  Output: Next, we want to create a linear regression with lalonde data. 
      The dependent variable is re78. The independent variables are age, education, and the interaction between age and education. 
      Save the regression to an object called lm1.
  CorrectAnswer: lm1 <- lm(re78 ~ age + educ + I(age*educ), data=lalonde)
  AnswerTests: any_of_exprs('lm1 <- lm(re78 ~ age + educ + I(age*educ), data=lalonde)', 'lm1 <- lm(re78 ~ age*educ, data=lalonde)', 'lm1 <- lm(lalonde$re78 ~ lalonde$age + lalonde$educ + I(lalonde$age*lalonde$educ))', 'lm1 <- lm(lalonde$re78 ~ (lalonde$age)*(lalonde*educ))')
  Hint: Use the I() function to "isolate" the interaction terms age and educ. This is best practice when adding interaction terms in linear regressions.

- Class: cmd_question
  Output: With the trained linear regression, we are now going to use 
      simulation (which has many useful features that will be introduced 
      in the future). If you haven't already, Let's first install the 
      "arm" library by typing install.packages("arm"). If you already have
      the package installed, load it. 
  CorrectAnswer: library(arm)
  AnswerTests: any_of_exprs('library(arm)', 'library("arm")')
  Hint: Fill in the argument for library().

- Class: cmd_question
  Output: Now, the fun stuff. Let's run 5000 simulations using the regression object we trained earlier. 
      Save the simulation object as sim_results.
  CorrectAnswer: sim_results <- sim(lm1, n.sims = 5000)
  AnswerTests: any_of_exprs('sim_results <- sim(lm1, n.sims = 5000)')
  Hint: Fill in the arguments for sim().

- Class: exact_question
  Output: Let's take a look at the coefficients of our 5000 simulations. You have already saved
      the results to an object called sim_results. You can easily call the vector of
      coefficients by using the @ sign. So type in sim_results@coef.
  CorrectAnswer: sim_results@coef
  AnswerTests: omnitest(correctVal = sim_results@coef)
  Hint: You should insert coef or sigma after the @ operator.

- Class: exact_question
  Output: Let's take a look at the simulated coefficient for age.
  CorrectAnswer: sim_results@coef[,2]
  AnswerTests: omnitest(correctVal = sim_results@coef[,2])
  Hint: Remember to use a comma somewhere in the [] to indicate we want the second column.

- Class: exact_question
  Output: Calculate the mean of the simulated coefficient for age. This is the "simulated" estimate of the coefficient.
  CorrectAnswer: mean(sim_results@coef[,2])
  AnswerTests: omnitest(correctVal = mean(sim_results@coef[,2]))
  Hint: Use the mean() function.

- Class: exact_question
  Output: Still remember the regression we created in the beginning? Let's get the coefficient for age from that. 
      Note that this is the "analytical" estimate for the coefficient. You can call the 
      coefficient by typing lm1$coef[2]
  CorrectAnswer: lm1$coef[2]
  AnswerTests: any_of_exprs('lm1$coef[2]')
  Hint: Insert coef after the $ operator to get the analytical coefficient, and specify for the second element.

- Class: text  
  Output: Note that the analytical and the simulated estimates of coefficients are pretty similar.
      However, we do need sufficient number of simulations in order to achieve this. 
      We will explore simulations further in future sessions.

- Class: mult_question
  Output: "Would you like the code-generator to generate a code for you?"
  AnswerChoices: Yes;No
  CorrectAnswer: NULL
  AnswerTests: cs112_credit(941, "s5")
  Hint:
